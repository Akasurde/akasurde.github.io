<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>https://akasurde.github.io - git</title><link href="https://akasurde.github.io/" rel="alternate"></link><link href="https://akasurde.github.io/feeds/git.atom.xml" rel="self"></link><id>https://akasurde.github.io/</id><updated>2017-03-11T12:03:00+05:30</updated><subtitle>Developer, Hacker</subtitle><entry><title>Git - CIA cheatsheet</title><link href="https://akasurde.github.io/git-cheat-sheet-cia-edition.html" rel="alternate"></link><published>2017-03-11T12:03:00+05:30</published><updated>2016-03-11T12:03:00+05:30</updated><author><name>Abhijeet Kasurde</name></author><id>tag:akasurde.github.io,2017-03-11:/git-cheat-sheet-cia-edition.html</id><summary type="html">&lt;p&gt;Git - CIA Cheatsheet&lt;/p&gt;</summary><content type="html">&lt;p&gt;Shamelessly taken from - https://wikileaks.org/ciav7p1/cms/page_1179773.html&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;List Aliases&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git config --get-regexp 'alias.*' | colrm 1 6 &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use last commit message for amend&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git commit --amend -C HEAD &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Undo last commit and bring everything to staging area&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git reset --soft HEAD^ &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Undo last commit and restart everything&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git reset --hard HEAD^ &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create new branch with Stash changes&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git stash branch new-branch-name &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git status in short format&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git status -s &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="git"></category><category term="git"></category></entry><entry><title>Git commands without SSL verify</title><link href="https://akasurde.github.io/git-no-ssl-verify.html" rel="alternate"></link><published>2017-02-14T12:03:00+05:30</published><updated>2017-02-14T12:03:00+05:30</updated><author><name>Abhijeet Kasurde</name></author><id>tag:akasurde.github.io,2017-02-14:/git-no-ssl-verify.html</id><summary type="html">&lt;p&gt;Git commands without SSL verify&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use git commands on a git server without proper SSL certificate &lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ env GIT_SSL_NO_VERIFY=true git COMMAND&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To disable SSL certificate checking for repo only&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git config http.sslVerify "false"&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To disable SSL certificate checking for all repos&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git config --global http.sslVerify "false"&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="git"></category><category term="git"></category><category term="cheat-sheet"></category></entry><entry><title>Git Reflog - Time Machine</title><link href="https://akasurde.github.io/git-reflog-time-machine.html" rel="alternate"></link><published>2017-02-11T12:03:00+05:30</published><updated>2017-02-11T12:03:00+05:30</updated><author><name>Abhijeet Kasurde</name></author><id>tag:akasurde.github.io,2017-02-11:/git-reflog-time-machine.html</id><summary type="html">&lt;p&gt;Git Reflog a.k.a. Time Machine&lt;/p&gt;</summary><content type="html">&lt;p&gt;Git reflog can be used to get you out of mess&lt;/p&gt;
&lt;p&gt;&lt;img alt="Initial commit" src="https://akasurde.github.io/images/image_1.png"&gt;
&lt;img alt="commit 2" src="https://akasurde.github.io/images/image_2.png"&gt;
&lt;img alt="commit 3" src="https://akasurde.github.io/images/image_3.png"&gt;
&lt;img alt="Using git reflog" src="https://akasurde.github.io/images/image_4.png"&gt;&lt;/p&gt;</content><category term="git"></category><category term="git"></category></entry><entry><title>Git - Cheatsheet</title><link href="https://akasurde.github.io/git-cheat-sheet.html" rel="alternate"></link><published>2016-03-11T12:03:00+05:30</published><updated>2016-03-11T12:03:00+05:30</updated><author><name>Abhijeet Kasurde</name></author><id>tag:akasurde.github.io,2016-03-11:/git-cheat-sheet.html</id><summary type="html">&lt;p&gt;Git - Cheatsheet&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initialize bare repository&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git init .&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amending the commit message which is not pushed&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git commit --amend&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Force push amended commit message to a remote branch&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git push remote_name branch_name -f&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Undo git add to files staged for git commit&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git reset HEAD file_name &lt;/pre&gt; or
&lt;pre&gt;$ git rm --cached file_name &lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;: &lt;code&gt;git reset HEAD a.sh&lt;/code&gt; or &lt;code&gt;git rm --cached a.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command will remove a file named a.sh from the current index, the "about to be committed" area, without changing anything else.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Diff files which are under staging&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git diff --staged &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Diff between two commits&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git diff commit_1 commit_2&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Diff between two branches&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git diff branch_1 branch_2&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push Local branch to central git repository&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git push remote_name branch_name&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create patch using git format-patch&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git format-patch master --stdout &amp;gt; fix_empty_poster.patch &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;View first 3 commit messages in git log&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git log --pretty=oneline -3 &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding signed-off in commit message&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git commit -s -m "commit_message" &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using pull without unwanted merge commits&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git pull --rebase &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deleting last commit in local repository&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git reset HEAD^ --hard &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deleting last commit from remote repository&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git reset HEAD^ --hard &lt;/pre&gt;
&lt;pre&gt;$ git push origin master -f &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Revert git pull&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git reset --hard &lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Diff between lastest commit and last commit&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;$ git diff HEAD^ HEAD&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="git"></category><category term="git"></category></entry></feed>